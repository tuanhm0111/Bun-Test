// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Define your data model here
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String?
  lastName  String?
  avatar    String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  posts    Post[]
  comments Comment[]

  @@map("users")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  posts Post[]

  @@map("categories")
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String
  slug        String     @unique
  content     String     @db.Text
  excerpt     String?
  featured    Boolean    @default(false)
  status      PostStatus @default(DRAFT)
  publishedAt DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  // Foreign keys
  authorId   Int
  categoryId Int

  // Relations
  author   User      @relation(fields: [authorId], references: [id])
  category Category  @relation(fields: [categoryId], references: [id])
  comments Comment[]

  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Foreign keys
  postId Int
  userId Int

  // Relations
  post Post @relation(fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("comments")
}

// Enum
enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
